<?xml version="1.0"?>

<!-- License {-->
<!--
Copyright 2015 Fadri Furrer, ASL, ETH Zurich, Switzerland
Copyright 2015 Michael Burri, ASL, ETH Zurich, Switzerland
Copyright 2015 Mina Kamel, ASL, ETH Zurich, Switzerland
Copyright 2015 Janosch Nikolic, ASL, ETH Zurich, Switzerland
Copyright 2015 Markus Achtelik, ASL, ETH Zurich, Switzerland

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!--}-->

<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Meshes {-->

  <!-- Sensor holders -->
  <xacro:property name="bluefox_holder_mesh_file" value="t650_bluefox_holder_brick.dae" />
  <xacro:property name="realsense_holder_tilted_mesh_file" value="t650_realsense_holder_brick.dae" />
  <!--}-->

  <!-- Macro to add logging to a bag file {-->
  <xacro:macro name="bag_plugin_macro"
    params="namespace bag_file rotor_velocity_slowdown_sim">
    <gazebo>
      <plugin filename="librotors_gazebo_bag_plugin.so" name="rosbag">
        <robotNamespace>${namespace}</robotNamespace>
        <bagFileName>${bag_file}</bagFileName>
        <linkName>base_link</linkName>
        <frameId>base_link</frameId>
        <commandAttitudeThrustSubTopic>command/attitude</commandAttitudeThrustSubTopic>
        <commandAttitudeThrustPubTopic>command/attitude</commandAttitudeThrustPubTopic>
        <rotorVelocitySlowdownSim>${rotor_velocity_slowdown_sim}</rotorVelocitySlowdownSim>
      </plugin>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add the controller interface {-->
  <xacro:macro name="controller_plugin_macro" params="namespace imu_sub_topic">
    <gazebo>
      <plugin name="controller_interface" filename="libgazebo_controller_interface.so">
        <robotNamespace>${namespace}</robotNamespace>
        <commandAttitudeThrustSubTopic>/command/attitude</commandAttitudeThrustSubTopic>
        <commandRateThrustSubTopic>/command/rate</commandRateThrustSubTopic>
        <commandMotorSpeedSubTopic>/command/motor_speed</commandMotorSpeedSubTopic>
        <imuSubTopic>/${imu_sub_topic}</imuSubTopic>
        <motorSpeedCommandPubTopic>/gazebo/command/motor_speed</motorSpeedCommandPubTopic>
      </plugin>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add the gps_plugin {-->
  <xacro:macro name="gps_plugin_macro" params="namespace gps_noise gps_indoor_jamming">
    <gazebo>
      <plugin name="gps_plugin" filename="libmrs_gazebo_gps_plugin.so">
        <robotNamespace>${namespace}</robotNamespace>
        <gpsNoise>${gps_noise}</gpsNoise>
        <indoorJamming>${gps_indoor_jamming}</indoorJamming>
      </plugin>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add the magnetometer_plugin{-->
  <xacro:macro name="magnetometer_plugin_macro" params="namespace pub_rate noise_density random_walk bias_correlation_time mag_topic">
    <gazebo>
      <plugin name="magnetometer_plugin" filename="libgazebo_magnetometer_plugin.so">
        <robotNamespace>${namespace}</robotNamespace>
        <pubRate>${pub_rate}</pubRate>
        <noiseDensity>${noise_density}</noiseDensity>
        <randomWalk>${random_walk}</randomWalk>
        <biasCorrelationTime>${bias_correlation_time}</biasCorrelationTime>
        <magTopic>${mag_topic}</magTopic>
      </plugin>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add the barometer_plugin{-->
  <xacro:macro name="barometer_plugin_macro" params="namespace pub_rate baro_topic">
    <gazebo>
      <plugin name="barometer_plugin" filename="libgazebo_barometer_plugin.so">
        <robotNamespace>${namespace}</robotNamespace>
        <pubRate>${pub_rate}</pubRate>
        <baroTopic>${baro_topic}</baroTopic>
      </plugin>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add the mavlink interface{-->
  <xacro:macro name="mavlink_interface_macro" params="namespace imu_sub_topic gps_sub_topic mag_sub_topic baro_sub_topic mavlink_addr mavlink_udp_port mavlink_tcp_port serial_enabled serial_device baudrate qgc_addr qgc_udp_port sdk_addr sdk_udp_port hil_mode hil_state_level vehicle_is_tailsitter send_vision_estimation send_odometry enable_lockstep use_tcp">
    <gazebo>
      <plugin name="mavlink_interface" filename="libgazebo_mavlink_interface.so">
        <robotNamespace>${namespace}</robotNamespace>
        <imuSubTopic>${imu_sub_topic}</imuSubTopic>
        <gpsSubTopic>${gps_sub_topic}</gpsSubTopic>
        <magSubTopic>${mag_sub_topic}</magSubTopic>
        <baroSubTopic>${baro_sub_topic}</baroSubTopic>
        <mavlink_addr>$(arg mavlink_addr)</mavlink_addr>
        <mavlink_udp_port>$(arg mavlink_udp_port)</mavlink_udp_port>
        <mavlink_tcp_port>$(arg mavlink_tcp_port)</mavlink_tcp_port>
        <serialEnabled>$(arg serial_enabled)</serialEnabled>
        <serialDevice>$(arg serial_device)</serialDevice>
        <baudRate>$(arg baudrate)</baudRate>
        <qgc_addr>$(arg qgc_addr)</qgc_addr>
        <qgc_udp_port>$(arg qgc_udp_port)</qgc_udp_port>
        <sdk_addr>$(arg sdk_addr)</sdk_addr>
        <sdk_udp_port>$(arg sdk_udp_port)</sdk_udp_port>
        <hil_mode>$(arg hil_mode)</hil_mode>
        <hil_state_level>$(arg hil_state_level)</hil_state_level>
        <vehicle_is_tailsitter>$(arg vehicle_is_tailsitter)</vehicle_is_tailsitter>
        <send_vision_estimation>$(arg send_vision_estimation)</send_vision_estimation>
        <send_odometry>$(arg send_odometry)</send_odometry>
        <enable_lockstep>$(arg enable_lockstep)</enable_lockstep>
        <use_tcp>$(arg use_tcp)</use_tcp>
        <motorSpeedCommandPubTopic>/gazebo/command/motor_speed</motorSpeedCommandPubTopic>
        <control_channels>
          <channel name="rotor1">
            <input_index>0</input_index>
            <input_offset>0</input_offset>
            <input_scaling>1</input_scaling>
            <zero_position_disarmed>0</zero_position_disarmed>
            <zero_position_armed>0.15</zero_position_armed>
            <joint_control_type>velocity</joint_control_type>
          </channel>
          <channel name="rotor2">
            <input_index>1</input_index>
            <input_offset>0</input_offset>
            <input_scaling>1</input_scaling>
            <zero_position_disarmed>0</zero_position_disarmed>
            <zero_position_armed>0.15</zero_position_armed>
            <joint_control_type>velocity</joint_control_type>
          </channel>
          <channel name="rotor3">
            <input_index>2</input_index>
            <input_offset>0</input_offset>
            <input_scaling>1</input_scaling>
            <zero_position_disarmed>0</zero_position_disarmed>
            <zero_position_armed>0.15</zero_position_armed>
            <joint_control_type>velocity</joint_control_type>
          </channel>
          <channel name="rotor4">
            <input_index>3</input_index>
            <input_offset>0</input_offset>
            <input_scaling>1</input_scaling>
            <zero_position_disarmed>0</zero_position_disarmed>
            <zero_position_armed>0.15</zero_position_armed>
            <joint_control_type>velocity</joint_control_type>
          </channel>
          <channel name="rotor5">
            <input_index>4</input_index>
            <input_offset>0</input_offset>
            <input_scaling>1</input_scaling>
            <zero_position_disarmed>0</zero_position_disarmed>
            <zero_position_armed>0.15</zero_position_armed>
            <joint_control_type>velocity</joint_control_type>
          </channel>
          <channel name="rotor6">
            <input_index>5</input_index>
            <input_offset>0</input_offset>
            <input_scaling>1</input_scaling>
            <zero_position_disarmed>0</zero_position_disarmed>
            <zero_position_armed>0.15</zero_position_armed>
            <joint_control_type>velocity</joint_control_type>
          </channel>
          <channel name="rotor7">
            <input_index>6</input_index>
            <input_offset>0</input_offset>
            <input_scaling>1</input_scaling>
            <zero_position_disarmed>0</zero_position_disarmed>
            <zero_position_armed>0.15</zero_position_armed>
            <joint_control_type>velocity</joint_control_type>
          </channel>
          <channel name="rotor8">
            <input_index>7</input_index>
            <input_offset>0</input_offset>
            <input_scaling>1</input_scaling>
            <zero_position_disarmed>0</zero_position_disarmed>
            <zero_position_armed>0.15</zero_position_armed>
            <joint_control_type>velocity</joint_control_type>
          </channel>
        </control_channels>
      </plugin>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add an IMU{-->
  <xacro:macro name="imu_plugin_macro"
    params="namespace imu_suffix parent_link imu_topic
    mass_imu_sensor gyroscope_noise_density gyroscopoe_random_walk
    gyroscope_bias_correlation_time gyroscope_turn_on_bias_sigma
    accelerometer_noise_density accelerometer_random_walk
    accelerometer_bias_correlation_time accelerometer_turn_on_bias_sigma
    *inertia *origin">
    <!-- IMU link -->
    <link name="${namespace}/imu${imu_suffix}_link">
      <inertial>
        <xacro:insert_block name="inertia" />
        <mass value="${mass_imu_sensor}" />  <!-- [kg] -->
        <origin xyz="0 0 0" rpy="0 0 0" />
      </inertial>
    </link>
    <!-- IMU joint -->
    <joint name="${namespace}/imu${imu_suffix}_joint" type="revolute">
      <xacro:insert_block name="origin" />
      <parent link="${parent_link}" />
      <child link="${namespace}/imu${imu_suffix}_link" />
      <limit upper="0" lower="0" effort="0" velocity="0" />
    </joint>
    <gazebo>
      <plugin filename="libgazebo_imu_plugin.so" name="rotors_gazebo_imu${imu_suffix}_plugin">
        <!-- A good description of the IMU parameters can be found in the kalibr documentation:
        https://github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics -->
        <robotNamespace>${namespace}</robotNamespace> <!-- (string, required): ros namespace in which the messages are published -->
        <linkName>${namespace}/imu${imu_suffix}_link</linkName> <!-- (string, required): name of the body which holds the IMU sensor -->
        <imuTopic>${imu_topic}</imuTopic> <!-- (string): name of the sensor output topic and prefix of service names (defaults to imu) -->
        <gyroscopeNoiseDensity>${gyroscope_noise_density}</gyroscopeNoiseDensity> <!-- Gyroscope noise density (two-sided spectrum) [rad/s/sqrt(Hz)] -->
        <gyroscopeRandomWalk>${gyroscopoe_random_walk}</gyroscopeRandomWalk> <!-- Gyroscope bias random walk [rad/s/s/sqrt(Hz)] -->
        <gyroscopeBiasCorrelationTime>${gyroscope_bias_correlation_time}</gyroscopeBiasCorrelationTime> <!-- Gyroscope bias correlation time constant [s] -->
        <gyroscopeTurnOnBiasSigma>${gyroscope_turn_on_bias_sigma}</gyroscopeTurnOnBiasSigma> <!-- Gyroscope turn on bias standard deviation [rad/s] -->
        <accelerometerNoiseDensity>${accelerometer_noise_density}</accelerometerNoiseDensity> <!-- Accelerometer noise density (two-sided spectrum) [m/s^2/sqrt(Hz)] -->
        <accelerometerRandomWalk>${accelerometer_random_walk}</accelerometerRandomWalk> <!-- Accelerometer bias random walk. [m/s^2/s/sqrt(Hz)] -->
        <accelerometerBiasCorrelationTime>${accelerometer_bias_correlation_time}</accelerometerBiasCorrelationTime> <!-- Accelerometer bias correlation time constant [s] -->
        <accelerometerTurnOnBiasSigma>${accelerometer_turn_on_bias_sigma}</accelerometerTurnOnBiasSigma> <!-- Accelerometer turn on bias standard deviation [m/s^2] -->
      </plugin>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add the wind plugin{-->
  <xacro:macro name="wind_plugin_macro"
    params="namespace xyz_offset wind_direction wind_force_mean
    wind_gust_direction wind_gust_duration wind_gust_start
    wind_gust_force_mean">
    <gazebo>
      <plugin filename="libgazebo_wind_plugin.so" name="wind_plugin">
        <frameId>base_link</frameId>
        <linkName>base_link</linkName>
        <robotNamespace>${namespace}</robotNamespace>
        <xyzOffset>${xyz_offset}</xyzOffset> <!-- [m] [m] [m] -->
        <windDirection>${wind_direction}</windDirection>
        <windForceMean>${wind_force_mean}</windForceMean> <!-- [N] -->
        <windGustDirection>${wind_gust_direction}</windGustDirection>
        <windGustDuration>${wind_gust_duration}</windGustDuration> <!-- [s] -->
        <windGustStart>${wind_gust_start}</windGustStart> <!-- [s] -->
        <windGustForceMean>${wind_gust_force_mean}</windGustForceMean> <!-- [N] -->
      </plugin>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a rangefinder{-->
  <xacro:macro name="rangefinder_macro"
    params="namespace parent_link rangefinder_suffix rangefinder_frame_id topic
    frame_rate fov min_distance max_distance resolution noise
    *visual *origin name color">
    <link name="${namespace}/${name}_link">
      <xacro:insert_block name="visual" />
    </link>
    <joint name="${namespace}/${name}_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent_link}" />
      <child link="${namespace}/${name}_link" />
    </joint>
    <gazebo reference="${namespace}/${name}_link">
      <sensor name="${name}" type='ray'>
        <update_rate>${frame_rate}</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>5</samples>
              <resolution>1</resolution>
              <min_angle>-${fov/2}</min_angle>
              <max_angle>${fov/2}</max_angle>
            </horizontal>
            <vertical>
              <samples>5</samples>
              <resolution>1</resolution>
              <min_angle>-${fov/2}</min_angle>
              <max_angle>${fov/2}</max_angle>
            </vertical>
          </scan>
          <range>
            <min>${min_distance}</min>
            <max>${max_distance}</max>
            <resolution>${resolution}</resolution>
          </range>
        </ray>
        <plugin name='gazebo_ros_range' filename='libgazebo_ros_range.so'>
          <gaussianNoise>${noise}</gaussianNoise>
          <alwaysOn>true</alwaysOn>
          <updateRate>${frame_rate}</updateRate>
          <topicName>${topic}</topicName>
          <frameName>/${rangefinder_frame_id}</frameName>
          <fov>${fov}</fov>
          <radiation>radiation</radiation>
        </plugin>
      </sensor>
    </gazebo>
    <gazebo reference="${namespace}/${name}_link">
      <material>Gazebo/${color}</material>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a garmin{-->
  <xacro:macro name="garmin_macro"
    params="namespace parent_link *origin">
    <xacro:rangefinder_macro
      namespace="${namespace}"
      name="garmin"
      color="Black"
      parent_link="${parent_link}"
      frame_rate="100"
      rangefinder_suffix="garmin"
      rangefinder_frame_id="garmin_${namespace}"
      topic="garmin/range"
      fov="0.03"
      min_distance="0.1"
      max_distance="40"
      resolution= "0.005"
      noise="0.04"
      >
      <visual>
        <origin xyz="0 0 0" rpy="0 -1.57079632679 0" />
        <geometry>
          <box size=".027 .033 0.015" />
        </geometry>
      </visual>
      <xacro:insert_block name="origin" />
    </xacro:rangefinder_macro>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a teraranger One{-->
  <xacro:macro name="teraranger_macro" params="namespace parent_link *origin">
    <xacro:rangefinder_macro
      namespace="${namespace}"
      name="teraranger"
      color="Yellow"
      parent_link="${parent_link}"
      frame_rate="100"
      rangefinder_suffix="teraranger"
      rangefinder_frame_id="teraranger_${namespace}"
      topic="teraranger/range"
      fov="0.03"
      min_distance="0.1"
      max_distance="14"
      resolution= "0.005"
      noise="0.04"
      >
      <visual>
        <origin xyz="0 0 0" rpy="0 -1.57079632679 0" />
        <geometry>
          <box size=".027 .033 0.015" />
        </geometry>
      </visual>
      <xacro:insert_block name="origin" />
    </xacro:rangefinder_macro>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a depth camera {-->
  <xacro:macro name="depth_camera_macro"
    params="namespace parent_link camera_suffix frame_rate
    horizontal_fov image_width image_height min_distance max_distance
    noise_mean noise_stddev *visual_body *visual_glass *origin frame_id">

    <!-- visual links and joints {-->
    <link name="${namespace}/camera_${camera_suffix}_link">
      <xacro:insert_block name="visual_body" />
    </link>

    <link name="${namespace}/camera_${camera_suffix}_infra1_link">
    </link>

    <link name="${namespace}/camera_${camera_suffix}_infra2_link">
    </link>

    <link name="${namespace}/camera_${camera_suffix}_glass_link">
      <xacro:insert_block name="visual_glass" />
    </link>

    <joint name="${namespace}/camera_${camera_suffix}_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent_link}" />
      <child link="${namespace}/camera_${camera_suffix}_link" />
    </joint>

    <joint name="${namespace}/camera_${camera_suffix}_infra1_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${namespace}/camera_${camera_suffix}_link" />
      <child link="${namespace}/camera_${camera_suffix}_infra1_link" />
    </joint>

    <joint name="${namespace}/camera_${camera_suffix}_infra2_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${namespace}/camera_${camera_suffix}_link" />
      <child link="${namespace}/camera_${camera_suffix}_infra2_link" />
    </joint>

    <joint name="${namespace}/camera_${camera_suffix}_glass_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent_link}" />
      <child link="${namespace}/camera_${camera_suffix}_glass_link" />
    </joint>
    <!--}-->

    <!-- sensor {-->
    <gazebo reference="${namespace}/camera_${camera_suffix}_link">
      <sensor type="depth" name="${namespace}_camera_${camera_suffix}">
        <update_rate>30.0</update_rate>
        <camera name="head">
          <horizontal_fov>${horizontal_fov}</horizontal_fov>
          <image>
            <width>${image_width}</width>
            <height>${image_height}</height>
          </image>
          <clip>
            <near>${min_distance}</near>
            <far>${max_distance}</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>${noise_mean}</mean>
            <stddev>${noise_stddev}</stddev>
          </noise>
        </camera>

        <plugin name="${namespace}_camera_${camera_suffix}_controller" filename="libgazebo_ros_depth_camera.so">
          <baseline>0.2</baseline>
          <alwaysOn>true</alwaysOn>
          <updateRate>30.0</updateRate>
          <cameraName>${camera_suffix}</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <depthImageTopicName>depth/image_raw</depthImageTopicName>
          <depthImageInfoTopicName>depth_info</depthImageInfoTopicName>
          <depthImageCameraInfoTopicName>depth_camera_info</depthImageCameraInfoTopicName>
          <pointCloudTopicName>depth_PCL</pointCloudTopicName>
          <frameName>/${frame_id}</frameName>
          <pointCloudCutoff>0.5</pointCloudCutoff>
          <distortionK1>0</distortionK1>
          <distortionK2>0</distortionK2>
          <distortionK3>0</distortionK3>
          <distortionT1>0</distortionT1>
          <distortionT2>0</distortionT2>
          <CxPrime>0</CxPrime>
          <Cx>0</Cx>
          <Cy>0</Cy>
          <focalLength>0</focalLength>
          <hackBaseline>0</hackBaseline>
        </plugin>
      </sensor>
    </gazebo>
    <!--}-->

    <gazebo reference="${namespace}/camera_${camera_suffix}_link">
      <material>Gazebo/White</material>
    </gazebo>

    <gazebo reference="${namespace}/camera_${camera_suffix}_glass_link">
      <material>Gazebo/DarkGrey</material>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add Intel Realsense D435 {-->
  <xacro:macro name="realsense_macro"
    params="namespace parent_link parent_frame_name camera_suffix x y z roll pitch yaw">

    <!-- visual links and joints {-->
    <link name="${namespace}/camera_${camera_suffix}">
      <visual>
        <origin xyz="0.0 0.0 0" rpy="-1.5708 0 -1.5708" />
        <geometry>
          <mesh filename="package://rotors_description/meshes/realsense_body.stl"
            scale="0.001 0.001 0.001" />
        </geometry>
      </visual>
    </link>

    <link name="${namespace}/camera_${camera_suffix}_glass_link">
      <visual>
        <origin xyz="0.0 0.0 0" rpy="-1.5708 0 -1.5708" />
        <geometry>
          <mesh filename="package://rotors_description/meshes/realsense_glass.stl"
            scale="0.001 0.001 0.001" />
        </geometry>
      </visual>
    </link>

    <joint name="${namespace}/camera_${camera_suffix}_joint" type="fixed">
      <origin xyz="${x} ${y} ${z}" rpy="${roll} ${pitch} ${yaw}"/>
      <parent link="${parent_link}" />
      <child link="${namespace}/camera_${camera_suffix}" />
    </joint>

    <joint name="${namespace}/camera_${camera_suffix}_glass_joint" type="fixed">
      <origin xyz="${x} ${y} ${z}" rpy="${roll} ${pitch} ${yaw}"/>
      <parent link="${parent_link}" />
      <child link="${namespace}/camera_${camera_suffix}_glass_link" />
    </joint>
    <!--}-->

    <gazebo>
      <plugin name="${camera_suffix}_plugin" filename="librealsense_gazebo_plugin.so">
        <useRealistic>$(arg enable_realistic_realsense)</useRealistic>
        <noisePerMeter>0.2</noisePerMeter>
        <minNoiseDistance>4.0</minNoiseDistance>
        <perlinEmptyThreshold>0.8</perlinEmptyThreshold>
        <perlinEmptySpeed>0.2</perlinEmptySpeed>
        <imageScaling>4</imageScaling>
        <blurSize>15</blurSize>
        <erosionSize>5</erosionSize>
        <parentFrameName>${parent_frame_name}</parentFrameName>
        <x>${x}</x>
        <y>${y}</y>
        <z>${z}</z>
        <roll>${roll}</roll>
        <pitch>${pitch}</pitch>
        <yaw>${yaw}</yaw>
      </plugin>
    </gazebo>
    
    <!-- sensors {-->
    <gazebo reference="${namespace}/camera_${camera_suffix}">

      <!-- rgb camera {-->
      <sensor name="${namespace}/color" type="camera">
        <!-- <pose frame="">0 -0.046 0.004 0 0 0</pose> -->
        <pose frame="">0 0 -0.0115 0 0 0</pose>
        <camera name="${namespace}/camera_${camera_suffix}">
          <!-- <horizontal_fov>1.211259</horizontal_fov> -->
          <horizontal_fov>1.211259</horizontal_fov>
          <image>
            <width>1280</width>
            <height>720</height>
            <format>RGB_INT8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <always_on>1</always_on>
        <update_rate>60</update_rate>
        <visualize>0</visualize>
      </sensor>
      <!--}-->

      <!-- infra stereo {-->
      <sensor name="${namespace}/infra_stereo" type="multicamera">
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <visualize>0</visualize>
        <camera name="${namespace}/infra1">
          <!-- <horizontal_fov>1.7523106</horizontal_fov> -->
          <horizontal_fov>1.211259</horizontal_fov>
          <image>
            <width>640</width>
            <height>360</height>
            <format>L_INT8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>50</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.005</stddev>
          </noise>
        </camera>
        <camera name="${namespace}/infra2">
          <pose>0 0.05 0 0 0 0</pose>
          <!-- <horizontal_fov>1.7523106</horizontal_fov> -->
          <horizontal_fov>1.211259</horizontal_fov>
          <image>
            <width>640</width>
            <height>360</height>
            <format>L_INT8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>50</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.005</stddev>
          </noise>
        </camera>
      </sensor>
      <!--}-->

      <!-- (unused) infra2 {-->
        <!-- <sensor name="infra2" type="camera"> -->
        <!-- <parent link="${namespace}/camera_${camera_suffix}"/> -->
        <!-- <pose>0 -1.0325 0 0 0 0</pose> -->
        <!--   <pose frame="${namespace}/camera_${camera_suffix}_infra2">0 -1.0325 0 0 0 0</pose> -->
        <!--   <camera name="${namespace}/camera_${camera_suffix}_infra2"> -->
          <!-- <horizontal_fov>1.7523106</horizontal_fov> -->
          <!--     <horizontal_fov>1.211259</horizontal_fov> -->
          <!--     <image> -->
            <!--       <width>1280</width> -->
            <!--       <height>720</height> -->
            <!--       <format>L_INT8</format> -->
            <!--     </image> -->
          <!--     <clip> -->
            <!--       <near>0.1</near> -->
            <!--       <far>10</far> -->
            <!--     </clip> -->
          <!--     <noise> -->
            <!--       <type>gaussian</type> -->
            <!--       <mean>0.0</mean> -->
            <!--       <stddev>0.05</stddev> -->
            <!--     </noise> -->
          <!--   </camera> -->
        <!--   <always_on>1</always_on> -->
        <!--   <update_rate>60</update_rate> -->
        <!--   <visualize>0</visualize> -->
          <!-- </sensor> -->
          <!--}-->

      <!-- alined depth to color {-->
      <sensor name="${namespace}/aligned_depth_to_color" type="depth">
        <pose>0 -0.0115 0.0 0 0 0</pose>
        <camera name="${namespace}/camera_${camera_suffix}">
          <horizontal_fov>1.211259</horizontal_fov>
          <image>
            <xacro:if value="$(arg enable_realistic_realsense)">
              <width>320</width>
              <height>180</height>
            </xacro:if>
            <xacro:unless value="$(arg enable_realistic_realsense)">
              <width>1280</width>
              <height>720</height>
            </xacro:unless>
          </image>
          <clip>
            <near>0.2</near>
            <far>12</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>5000.0</stddev>
          </noise>
        </camera>
        <always_on>1</always_on>
        <update_rate>60</update_rate>
        <visualize>0</visualize>
      </sensor>
      <!--}-->
  
    </gazebo>
    <!--}-->

    <gazebo reference="${namespace}/camera_${camera_suffix}">
      <material>Gazebo/White</material>
    </gazebo>
    <gazebo reference="${namespace}/camera_${camera_suffix}_glass_link">
      <material>Gazebo/Black</material>
    </gazebo>

  </xacro:macro>
  <!--}-->

  <!-- Macro to add a camera {-->
  <xacro:macro name="camera_macro"
    params="namespace parent_link camera_suffix camera_frame_name sensor_base_frame_name frame_rate parent_frame_name
    horizontal_fov image_width image_height min_distance max_distance x y z roll pitch yaw
    noise_mean noise_stddev *visual">

    <link name="${namespace}/camera_${camera_suffix}_link">
      <xacro:insert_block name="visual" />
    </link>

    <joint name="${namespace}/camera_${camera_suffix}_joint" type="fixed">
      <origin xyz="${x} ${y} ${z}" rpy="${roll} ${pitch} ${yaw}"/>
      <parent link="${parent_link}" />
      <child link="${namespace}/camera_${camera_suffix}_link" />
    </joint>

    <gazebo reference="${namespace}/camera_${camera_suffix}_link">
      <sensor type="camera" name="${namespace}_camera_${camera_suffix}">
        <update_rate>${frame_rate}</update_rate>
        <camera name="head">
          <horizontal_fov>${horizontal_fov}</horizontal_fov>
          <image>
            <width>${image_width}</width>
            <height>${image_height}</height>
          </image>
          <clip>
            <near>${min_distance}</near>
            <far>${max_distance}</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
            That pixel's noise value is added to each of its color
            channels, which at that point lie in the range [0,1]. -->
            <mean>${noise_mean}</mean>
            <stddev>${noise_stddev}</stddev>
          </noise>
        </camera>
        <plugin name="${namespace}_camera_${camera_suffix}_controller" filename="libmrs_gazebo_camera_plugin.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>${frame_rate}</updateRate>
          <cameraName>${camera_suffix}</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>/${camera_frame_name}</frameName>
          <hackBaseline>0.0</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
          <parentFrameName>${parent_frame_name}</parentFrameName>
          <sensorBaseFrameName>${sensor_base_frame_name}</sensorBaseFrameName>
          <x>${x}</x>
          <y>${y}</y>
          <z>${z}</z>
          <roll>${roll}</roll>
          <pitch>${pitch}</pitch>
          <yaw>${yaw}</yaw>
        </plugin>
      </sensor>
    </gazebo>
    <gazebo reference="${namespace}/camera_${camera_suffix}_link">
      <material>Gazebo/DarkGrey</material>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add the controller interface {-->
  <xacro:macro name="controller_plugin_macro" params="namespace imu_sub_topic">
    <gazebo>
      <plugin name="controller_interface" filename="libgazebo_controller_interface.so">
        <robotNamespace>${namespace}</robotNamespace>
        <commandAttitudeThrustSubTopic>/command/attitude</commandAttitudeThrustSubTopic>
        <commandRateThrustSubTopic>/command/rate</commandRateThrustSubTopic>
        <commandMotorSpeedSubTopic>/command/motor_speed</commandMotorSpeedSubTopic>
        <imuSubTopic>/${imu_sub_topic}</imuSubTopic>
        <motorSpeedCommandPubTopic>/gazebo/command/motor_speed</motorSpeedCommandPubTopic>
      </plugin>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a rangefinder {-->
  <xacro:macro name="rangefinder_macro"
    params="namespace parent_link rangefinder_suffix parent_frame_name rangefinder_frame_name topic
    frame_rate fov min_distance max_distance resolution noise
    x y z roll pitch yaw
    *visual name color">
    <link name="${namespace}/${name}_link">
      <xacro:insert_block name="visual" />
    </link>
    <joint name="${namespace}/${name}_joint" type="fixed">
      <origin xyz="${x} ${y} ${z}" rpy="${roll} ${pitch} ${yaw}"/>
      <parent link="${parent_link}" />
      <child link="${namespace}/${name}_link" />
    </joint>
    <gazebo reference="${namespace}/${name}_link">
      <sensor name="${name}" type='ray'>
        <update_rate>${frame_rate}</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>5</samples>
              <resolution>1</resolution>
              <min_angle>-${fov/2}</min_angle>
              <max_angle>${fov/2}</max_angle>
            </horizontal>
            <vertical>
              <samples>5</samples>
              <resolution>1</resolution>
              <min_angle>-${fov/2}</min_angle>
              <max_angle>${fov/2}</max_angle>
            </vertical>
          </scan>
          <range>
            <min>${min_distance}</min>
            <max>${max_distance}</max>
            <resolution>${resolution}</resolution>
          </range>
        </ray>
        <plugin name='mrs_gazebo_rangefinder' filename='libmrs_gazebo_rangefinder_plugin.so'>
          <gaussianNoise>${noise}</gaussianNoise>
          <alwaysOn>true</alwaysOn>
          <updateRate>${frame_rate}</updateRate>
          <topicName>${topic}</topicName>
          <frameName>${rangefinder_frame_name}</frameName>
          <fov>${fov}</fov>
          <radiation>radiation</radiation>
          <parentFrameName>${parent_frame_name}</parentFrameName>
          <x>${x}</x>
          <y>${y}</y>
          <z>${z}</z>
          <roll>${roll}</roll>
          <pitch>${pitch}</pitch>
          <yaw>${yaw}</yaw>
        </plugin>
      </sensor>
    </gazebo>
    <gazebo reference="${namespace}/${name}_link">
      <material>Gazebo/${color}</material>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a garmin {-->
  <!-- Orientation empty for down looking garmin, _up for upward looking sensor -->
  <xacro:macro name="garmin_macro"
    params="namespace parent_link orientation x y z yaw pitch roll">
    <xacro:rangefinder_macro
      namespace="${namespace}"
      name="garmin${orientation}"
      color="Black"
      parent_link="${parent_link}"
      frame_rate="100"
      rangefinder_suffix="garmin${orientation}"
      rangefinder_frame_name="$(arg namespace)/garmin${orientation}"
      parent_frame_name="$(arg namespace)/fcu"
      topic="garmin/range${orientation}"
      fov="0.03"
      min_distance="0.1"
      max_distance="40"
      resolution= "0.005"
      noise="0.01"
      x="${x}"
      y="${y}"
      z="${z}"
      yaw="${yaw}"
      pitch="${pitch}"
      roll="${roll}"
      >
      <visual>
        <origin xyz="0 0 0" rpy="0 -1.57079632679 0" />
        <geometry>
          <box size=".027 .033 0.015" />
        </geometry>
      </visual>
    </xacro:rangefinder_macro>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a Teraranger One {-->
  <xacro:macro name="teraranger_macro" params="namespace parent_link x y z yaw pitch roll">
    <xacro:rangefinder_macro
      namespace="${namespace}"
      name="teraranger"
      color="Yellow"
      parent_link="${parent_link}"
      frame_rate="100"
      rangefinder_suffix="teraranger"
      rangefinder_frame_name="$(arg namespace)/teraranger"
      parent_frame_name="$(arg namespace)/fcu"
      topic="teraranger/range"
      fov="0.03"
      min_distance="0.1"
      max_distance="14"
      resolution= "0.005"
      noise="0.04"
      x="${x}"
      y="${y}"
      z="${z}"
      yaw="${yaw}"
      pitch="${pitch}"
      roll="${roll}"
      >
      <visual>
        <origin xyz="0 0 0" rpy="0 -1.57079632679 0" />
        <geometry>
          <box size=".027 .033 0.015" />
        </geometry>
      </visual>
    </xacro:rangefinder_macro>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a generic odometry sensor{-->
  <xacro:macro name="odometry_plugin_macro"
    params="
    namespace odometry_sensor_suffix parent_link topic_name mass_odometry_sensor
    noise frame_name frame_rate xyz_offset rpy_offset *inertia *origin">
    <!-- odometry link -->
    <link name="${namespace}/odometry_sensor${odometry_sensor_suffix}_link">
      <inertial>
        <xacro:insert_block name="inertia" />
        <mass value="${mass_odometry_sensor}" />  <!-- [kg] -->
      </inertial>
    </link>
    <!-- odometry joint -->
    <joint name="${namespace}/odometry_sensor${odometry_sensor_suffix}_joint" type="revolute">
      <parent link="${parent_link}" />
      <xacro:insert_block name="origin" />
      <child link="${namespace}/odometry_sensor${odometry_sensor_suffix}_link" />
      <limit upper="0" lower="0" effort="0" velocity="0" />
    </joint>
    <gazebo>
      <plugin filename="libgazebo_ros_p3d.so" name="odometry_sensor${odometry_sensor_suffix}">
        <alwaysOn>true</alwaysOn>
        <updateRate>${frame_rate}</updateRate>
        <bodyName>${namespace}/odometry_sensor${odometry_sensor_suffix}_link</bodyName>
        <topicName>${topic_name}</topicName>
        <gaussianNoise>${noise}</gaussianNoise>
        <frameName>${frame_name}</frameName>
        <xyzOffset>${xyz_offset}</xyzOffset>
        <rpyOffset>${rpy_offset}</rpyOffset>
      </plugin>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a box {-->
  <xacro:macro name="box_macro"
    params="robot_namespace mesh_file name mesh_scale parent *origin">
    <joint name="${name}_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent}" />
      <child link="${name}_link" />
    </joint>
    <link name="${name}_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://rotors_description/meshes/${mesh_file}"
            scale="${mesh_scale}" />
        </geometry>
      </visual>
    </link>
    <gazebo reference="${name}_link">
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add the top aluminium holder visual model (for RTK/laser sweeper/Teraranger Tower Evo) {-->
  <xacro:macro name="top_holder_macro"
    params="namespace parent_link *origin">
    <link name="${namespace}/top_holder_link">
      <visual name="top_holder_boxA">
        <origin xyz="-0.095 0 0.09" rpy="0 0 0" />
        <geometry>
          <box size="0.006 0.035 0.175" />
        </geometry>
      </visual>
      <visual name="top_holder_boxB">
        <origin xyz="0.095 0 0.09" rpy="0 0 0" />
        <geometry>
          <box size="0.006 0.035 0.175" />
        </geometry>
      </visual>
      <visual name="top_holder_boxC">
        <origin xyz="0 0 0.175" rpy="0 0 0" />
        <geometry>
          <box size="0.190 0.035 0.006" />
        </geometry>
      </visual>
    </link>
    <joint name="${namespace}/top_holder_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent_link}" />
      <child link="${namespace}/top_holder_link" />
    </joint>
    <gazebo reference="${namespace}_top_holder_link">
      <material>Gazebo/Grey</material>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a laser sweeper {-->
  <xacro:macro name="sweeper_macro"
    params="namespace parent_link frame_name topic
    rot_freq samples min_distance max_distance min_angle max_angle parent_frame_name resolution noise
    x y z roll pitch yaw visualize">

    <link name="${namespace}/sweeper_link">
      <visual name="sweeper_base">
        <origin xyz="0 0 -0.031" rpy="0 0 0" />
        <geometry>
          <cylinder radius="0.0255"
            length="0.0234" />
        </geometry>
      </visual>
      <visual name="sweeper_rotator">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder radius="0.0325"
            length="0.0385" />
        </geometry>
      </visual>
    </link>

    <joint name="${namespace}/sweeper_joint" type="fixed">
      <origin xyz="${x} ${y} ${z}" rpy="${roll} ${pitch} ${yaw}"/>
      <parent link="${parent_link}" />
      <child link="${namespace}/sweeper_link" />
    </joint>

    <!-- sensor {-->
    <gazebo reference="${namespace}/sweeper_link">
      <sensor name='sweeper' type='ray'>
        <visualize>${visualize}</visualize>
        <update_rate>${rot_freq}</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>${samples/rot_freq}</samples>
              <resolution>1</resolution>
              <min_angle>${min_angle}</min_angle>
              <max_angle>${max_angle}</max_angle>
            </horizontal>
            <!-- <vertical> -->
              <!--   <samples>1</samples> -->
              <!--   <resolution>1</resolution> -->
              <!--   <min_angle>-0.043633</min_angle> -->
              <!--   <max_angle>0.043633</max_angle> -->
              <!-- </vertical> -->
          </scan>
          <range>
            <min>${min_distance}</min>
            <max>${max_distance}</max>
            <resolution>${resolution}</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>${noise}</stddev>
          </noise>
        </ray>
        <plugin name='mrs_gazebo_2dlidar' filename='libmrs_gazebo_2dlidar_plugin.so'>
          <!-- <plugin name='gazebo_ros_range' filename='libgazebo_ros_gpu_laser.so'> -->
            <!-- <robotNamespace>${namespace}</robotNamespace> -->
            <topicName>${topic}</topicName>
            <frameName>${frame_name}</frameName>
            <parentFrameName>${parent_frame_name}</parentFrameName>
            <x>${x}</x>
            <y>${y}</y>
            <z>${z}</z>
            <roll>${roll}</roll>
            <pitch>${pitch}</pitch>
            <yaw>${yaw}</yaw>
          </plugin>
        </sensor>
        <material>Gazebo/Black</material>
      </gazebo>
      <!--}-->

    </xacro:macro>
    <!--}-->

  <!-- Macro to add a Scanse Sweeper{-->
  <xacro:macro name="scanse_sweep_macro"
    params="namespace parent_link frame_name visualize parent_frame_name x y z yaw pitch roll">
    <xacro:sweeper_macro
      namespace="${namespace}"
      parent_link="${parent_link}"
      rot_freq="10"
      samples="5000"
      frame_name="${frame_name}"
      topic="scanse_sweep/range"
      min_distance="0.45"
      max_distance="10.0"
      min_angle="0.0"
      max_angle="6.283185"
      resolution= "0.01"
      noise="0.01"
      visualize="${visualize}"
      parent_frame_name="$(arg namespace)/fcu"
      x="${x}"
      y="${y}"
      z="${z}"
      yaw="${yaw}"
      pitch="${pitch}"
      roll="${roll}"
      >
    </xacro:sweeper_macro>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a nPlidar A3{-->
  <xacro:macro name="rplidar_macro"
    params="namespace parent_link frame_name visualize parent_frame_name x y z yaw pitch roll">
    <xacro:sweeper_macro
      namespace="${namespace}"
      parent_link="${parent_link}"
      rot_freq="20"
      samples="14400"
      frame_name="${frame_name}"
      topic="rplidar/scan"
      min_distance="0.15"
      max_distance="25.0"
      min_angle="-3.1241390751"
      max_angle="3.14149274101"
      resolution= "0.01"
      noise="0.01"
      visualize="${visualize}"
      parent_frame_name="$(arg namespace)/fcu"
      x="${x}"
      y="${y}"
      z="${z}"
      yaw="${yaw}"
      pitch="${pitch}"
      roll="${roll}"
      >
    </xacro:sweeper_macro>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a 3D laser sweeper{-->
  <xacro:macro name="sweeper_3D_macro"
    params="name namespace parent_link frame_name topic
    rot_freq samples lasers organize_pc min_distance max_distance min_angle max_angle parent_frame_name resolution noise
    x y z roll pitch yaw visualize color">

    <!-- visual links and joints {-->
    <link name="${namespace}/${name}_link">
      <visual name="sweeper_3D_base">
        <origin xyz="0 0 0.0094" rpy="0 0 0" />
        <geometry>
          <cylinder radius="0.062"
            length="0.0188" />
        </geometry>
      </visual>
      <visual name="sweeper_3D_window">
        <origin xyz="0 0 0.03785" rpy="0 0 0" />
        <geometry>
          <cylinder radius="0.058"
            length="0.0381" />
        </geometry>
      </visual>
      <visual name="sweeper_3D_top">
        <origin xyz="0 0 0.0643" rpy="0 0 0" />
        <geometry>
          <cylinder radius="0.062"
            length="0.0148" />
        </geometry>
      </visual>
    </link>

    <joint name="${namespace}/sweeper_3D_joint" type="fixed">
      <origin xyz="${x} ${y} ${z}" rpy="${roll} ${pitch} ${yaw}"/>
      <parent link="${parent_link}" />
      <child link="${namespace}/${name}_link" />
    </joint>
    <!--}-->

    <!-- sensors {-->
    <gazebo reference="${namespace}/${name}_link">
      <!-- <sensor name='sweeper_3D' type='ray'> -->
        <sensor name='sweeper_3D' type='gpu_ray'>
          <visualize>${visualize}</visualize>
          <update_rate>${rot_freq}</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>${samples/(rot_freq*lasers)}</samples>
                <resolution>1</resolution>
                <min_angle>${min_angle}</min_angle>
                <max_angle>${max_angle}</max_angle>
              </horizontal>
              <vertical>
                <samples>${lasers}</samples>
                <resolution>1</resolution>
                <min_angle>-${15.0*3.14149274101/180.0}</min_angle>
                <max_angle> ${15.0*3.14149274101/180.0}</max_angle>
              </vertical>
            </scan>
            <range>
              <min>${min_distance}</min>
              <max>${max_distance}</max>
              <resolution>${resolution}</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>${noise}</stddev>
            </noise>
          </ray>
        <!-- <plugin name='gazebo_ros_laser_controller' filename='libgazebo_ros_velodyne_laser.so'> -->
        <plugin name='gazebo_ros_laser_controller' filename='libgazebo_ros_velodyne_gpu_laser.so'>
          <!-- <robotNamespace>${namespace}</robotNamespace> -->
          <topicName>${topic}</topicName>
          <frameName>${frame_name}</frameName>
          <organize_pc>${organize_pc}</organize_pc>
          <min_range>${min_distance}</min_range>
          <max_range>${max_distance}</max_range>
          <gaussianNoise>${noise}</gaussianNoise>
          <min_intensity>0.0</min_intensity>
          <parentFrameName>${parent_frame_name}</parentFrameName>
          <x>${x}</x>
          <y>${y}</y>
          <z>${z}</z>
          <roll>${roll}</roll>
          <pitch>${pitch}</pitch>
          <yaw>${yaw}</yaw>
        </plugin>
      </sensor>
    </gazebo>
    <!--}-->
    
    <gazebo reference="${namespace}/${name}_link">
      <material>Gazebo/${color}</material>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a Velodyne PUCK Lite{-->
  <xacro:macro name="velodyne_macro" params="namespace parent_link frame_name organize_pc visualize parent_frame_name x y z yaw pitch roll">
    <xacro:sweeper_3D_macro
      name="velodyne"
      namespace="${namespace}"
      parent_link="${parent_link}"
      rot_freq="20"
      samples="291200"
      lasers="16"
      frame_name="${frame_name}"
      topic="velodyne/scan"
      organize_pc="${organize_pc}"
      min_distance="0.15"
      max_distance="100.0"
      min_angle="-3.1241390751"
      max_angle="3.14149274101"
      resolution= "0.01"
      noise="0.01"
      visualize="${visualize}"
      parent_frame_name="$(arg namespace)/fcu"
      x="${x}"
      y="${y}"
      z="${z}"
      yaw="${yaw}"
      pitch="${pitch}"
      roll="${roll}"
      color="Black"
      >
    </xacro:sweeper_3D_macro>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add an Ouster OS1 {-->
  <xacro:macro name="ouster_macro" params="namespace x y z yaw pitch roll parent_link frame_fcu frame_sensor frame_lidar frame_imu hz samples topic_lidar topic_imu lasers min_range max_range noise min_angle max_angle">

    <joint name="${namespace}/base_joint" type="fixed">
      <origin xyz="${x} ${y} ${z}" rpy="${roll} ${pitch} ${yaw}" />
      <parent link="${parent_link}"/>
      <child link="${frame_sensor}"/>
    </joint>

    <link name="${frame_sensor}">
      <inertial>
        <mass value="0.0"/>
        <origin xyz="0 0 0.0365" rpy="0 0 0" />
        <inertia ixx="0.000241148" ixy="0" ixz="0"
          iyy="0.000241148" iyz="0" izz="0.000264"/>
      </inertial>
      <collision name="${namespace}/base_collision">
        <origin xyz="0 0 0.0365" rpy="0 0 0" />
        <geometry>
          <cylinder radius="0.04" length="0.073"/>
        </geometry>
      </collision>
      <visual name="${namespace}/base_visual">
        <origin xyz="0 0 0.0" rpy="0 0 1.5707" />
        <geometry>
          <mesh filename="package://rotors_description/meshes/os1_64.dae" />
          <!-- <cylinder length="0.073" radius="0.04" /> -->
        </geometry>
      </visual>
    </link>

    <link name="${frame_imu}" />
    <link name="${frame_lidar}" />

    <joint name="${namespace}/imu_link_joint" type="fixed">
      <parent link="${frame_sensor}" />
      <child link="${frame_imu}" />
      <origin xyz="0.006253 -0.011775 0.007645" rpy="0 0 0" />
    </joint>
    <gazebo reference="${frame_imu}">
    </gazebo>

    <joint name="{namespace}/lidar_link_joint" type="fixed">
      <parent link="${frame_sensor}" />
      <child link="${frame_lidar}" />
      <origin xyz="0.0 0.0 0.03618" rpy="0 0 ${M_PI}" />
    </joint>

    <!-- Gazebo requires the ouster_gazebo_plugins package -->
    <gazebo reference="${frame_sensor}">
      <sensor type="ray" name="${frame_sensor}/OS1">
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>${hz}</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>${samples}</samples>
              <resolution>1</resolution>
              <min_angle>${min_angle}</min_angle>
              <max_angle>${max_angle}</max_angle>
            </horizontal>
            <vertical>
              <samples>${lasers}</samples>
              <resolution>1</resolution>
              <min_angle>-${16.6*M_PI/180.0}</min_angle>
              <max_angle>${16.6*M_PI/180.0}</max_angle>
            </vertical>
          </scan>
          <range>
            <min>${min_range}</min>
            <max>${max_range}</max>
            <resolution>0.03</resolution>
          </range>
        </ray>
        <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_ouster_laser.so">
          <x>${x}</x>
          <y>${y}</y>
          <z>${z}</z>
          <roll>${roll}</roll>
          <pitch>${pitch}</pitch>
          <yaw>${yaw}</yaw>
          <topicName>${topic_lidar}</topicName>
          <parentFrameName>${frame_fcu}</parentFrameName>
          <sensorFrameName>${frame_sensor}</sensorFrameName>
          <lidarFrameName>${frame_lidar}</lidarFrameName>
          <imuFrameName>${frame_imu}</imuFrameName>
          <min_range>${min_range}</min_range>
          <max_range>${max_range}</max_range>
          <gaussianNoise>${noise}</gaussianNoise>
        </plugin>
      </sensor>
    </gazebo>

    <!-- IMU -->
    <gazebo>
      <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
        <!-- <robotNamespace>${namespace}</robotNamespace> -->
        <updateRate>100.0</updateRate>
        <bodyName>${frame_imu}</bodyName>
        <topicName>${topic_imu}</topicName>
        <accelDrift>0.005 0.005 0.005</accelDrift>
        <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
        <rateDrift>0.005 0.005 0.005 </rateDrift>
        <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
        <headingDrift>0.005</headingDrift>
        <headingGaussianNoise>0.005</headingGaussianNoise>
      </plugin>
    </gazebo>

  </xacro:macro>
  <!--}-->

  <!-- Macro for calculating inertia of cylinder {-->
  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertia ixx="${m*(3*r*r+h*h)/12}" ixy="0" ixz="0" iyy="${m*(3*r*r+h*h)/12}" iyz="0" izz="${m*r*r/2}"/>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a Teraranger Tower hub {-->
  <xacro:macro name="teraranger_base_hub" params="namespace parent_link x y z roll pitch yaw *origin">
    <link name="${namespace}_teraranger_base_hub">
      <visual>
        <origin xyz="0 0 -0.014" rpy="0 0 0 "/>
        <geometry>
          <cylinder length="0.001" radius="0.06"/>
        </geometry>
        <material name="Black"/>
      </visual>
    </link>

    <link name="${namespace}_hub_gyro_link"/>
    <joint name="${namespace}_hub_gyro_joint" type="fixed">
      <origin xyz="0 0 -0.014" rpy="0 0 0" />
      <parent link="${namespace}_teraranger_base_hub" />
      <child link="${namespace}_hub_gyro_link" />
    </joint>

    <link name="${namespace}_inertial_link">
      <inertial>
        <mass value="0.3"/>
        <origin xyz="0 0 -0.014" rpy="0 0 0" />
        <xacro:cylinder_inertia m="0.1" r="0.6" h="0.03" />
      </inertial>
    </link>
    <joint name="${namespace}_inertial_joint" type="fixed">
      <origin xyz="${x} ${y} ${z}" rpy="${roll} ${pitch} ${yaw}"/>
      <parent link="${namespace}_teraranger_base_hub" />
      <child link="${namespace}_inertial_link" />
    </joint>

    <gazebo reference="${namespace}_teraranger_base_hub">
      <material>Gazebo/Black</material>
      <!-- <turnGravityOff>true</turnGravityOff> -->
    </gazebo>

    <joint name="${namespace}_teraranger_base_hub_joint" type="fixed">
      <xacro:insert_block name="origin"/>
      <origin xyz="${x} ${y} ${z}" rpy="${roll} ${pitch} ${yaw}"/>
      <parent link="${parent_link}"/>
      <child link="${namespace}_teraranger_base_hub"/>
    </joint>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a single Teraranger Evo {-->
  <xacro:macro name="teraranger_evo" params="namespace id x y z roll pitch yaw visualize frame_name parent_frame_name gaussian_noise">
    <link name="${namespace}_teraranger_base_range_${id}">
      <visual>
        <origin xyz="0.0 0 0.0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://rotors_description/meshes/teraranger_evo.stl"/>
        </geometry>
        <material name="Yellow"/>
      </visual>
    </link>

    <joint name="${namespace}_teraranger_base_range_joint_${id}" type="fixed">
      <origin xyz="${x} ${y} ${z}" rpy="${roll} ${pitch} ${yaw}"/>
      <parent link="${namespace}_teraranger_base_hub"/>
      <child link="${namespace}_teraranger_base_range_${id}"/>
    </joint>

    <gazebo reference="${namespace}_teraranger_base_range_${id}">
      <material>Gazebo/Yellow</material>
      <sensor type="ray" name="${namespace}_teraranger_sensor_${id}">
        <visualize>${visualize}</visualize>
        <update_rate>120</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>10</samples>
              <resolution>1</resolution>
              <min_angle>-0.01750</min_angle>
              <max_angle>0.01750</max_angle>
            </horizontal>
            <vertical>
              <samples>10</samples>
              <resolution>1</resolution>
              <min_angle>-0.01750</min_angle>
              <max_angle>0.01750</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0.5</min>
            <max>60.0</max>
            <resolution>0.05</resolution>
          </range>
        </ray>
        <plugin name='mrs_gazebo_rangefinder' filename='libmrs_gazebo_rangefinder_plugin.so'>
          <topicName>teraranger_tower/range_${id}</topicName>
          <frameName>${frame_name}_range_${id}</frameName>
          <parentFrameName>${parent_frame_name}</parentFrameName>
          <gaussianNoise>${gaussian_noise}</gaussianNoise>
          <updateRate>20</updateRate>
          <radiation>ultrasound</radiation>
          <fov>0.035</fov>
          <x>${x}</x>
          <y>${y}</y>
          <z>${z}</z>
          <roll>${roll}</roll>
          <pitch>${pitch}</pitch>
          <yaw>${yaw}</yaw>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Terraranger Evo Tower configuration {-->
  <xacro:macro name="teraranger_evo_tower" params="namespace parent_link visualize x y z roll pitch yaw *origin frame_name parent_frame_name">
    <!-- EVO TOWER CONFIG-->
    <xacro:teraranger_base_hub
      namespace="${namespace}"
      parent_link="${parent_link}"
      x="0" y="0" z="-0.014" roll="0" pitch="0" yaw="0"
      >
      <xacro:insert_block name="origin"/>
    </xacro:teraranger_base_hub>

    <xacro:teraranger_evo namespace="${namespace}" id="0" x="0.046" y="0.000" z="0.001" roll="0" pitch="0" yaw="0.000" visualize="${visualize}" frame_name="${frame_name}" parent_frame_name="${frame_name}" gaussian_noise="0"/>
    <xacro:teraranger_evo namespace="${namespace}" id="1" x="0.032" y="0.032" z="0.001" roll="0" pitch="0" yaw="0.785" visualize="${visualize}" frame_name="${frame_name}" parent_frame_name="${frame_name}" gaussian_noise="0"/>
    <xacro:teraranger_evo namespace="${namespace}" id="2" x="0.000" y="0.046" z="0.001" roll="0" pitch="0" yaw="1.571" visualize="${visualize}" frame_name="${frame_name}" parent_frame_name="${frame_name}" gaussian_noise="0"/>
    <xacro:teraranger_evo namespace="${namespace}" id="3" x="-0.032" y="0.032" z="0.001" roll="0" pitch="0" yaw="2.356" visualize="${visualize}" frame_name="${frame_name}" parent_frame_name="${frame_name}" gaussian_noise="0"/>
    <xacro:teraranger_evo namespace="${namespace}" id="4" x="-0.046" y="0.000" z="0.001" roll="0" pitch="0" yaw="3.142" visualize="${visualize}" frame_name="${frame_name}" parent_frame_name="${frame_name}" gaussian_noise="0"/>
    <xacro:teraranger_evo namespace="${namespace}" id="5" x="-0.032" y="-0.032" z="0.001" roll="0" pitch="0" yaw="-2.356" visualize="${visualize}" frame_name="${frame_name}" parent_frame_name="${frame_name}" gaussian_noise="0"/>
    <xacro:teraranger_evo namespace="${namespace}" id="6" x="0.000" y="-0.046" z="0.001" roll="0" pitch="0" yaw="-1.571" visualize="${visualize}" frame_name="${frame_name}" parent_frame_name="${frame_name}" gaussian_noise="0"/>
    <xacro:teraranger_evo namespace="${namespace}" id="7" x="0.032" y="-0.032" z="0.001" roll="0" pitch="0" yaw="-0.785" visualize="${visualize}" frame_name="${frame_name}" parent_frame_name="${frame_name}" gaussian_noise="0"/>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a Teraranger Tower Evo {-->
  <xacro:macro name="teraranger_tower_evo_macro"
    params="namespace parent_link visualize frame_name parent_frame_name *origin">
    <xacro:teraranger_evo_tower
      namespace="${namespace}"
      parent_link="${parent_link}"
      visualize="${visualize}"
      x="0.0" y="0.0" z="0.0" roll="0" pitch="0" yaw="0"
      frame_name="${frame_name}"
      parent_frame_name="${parent_frame_name}"
      >
      <xacro:insert_block name="origin" />
    </xacro:teraranger_evo_tower>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a Bluefox camera {-->
  <xacro:macro name="bluefox_camera_macro"
    params="namespace parent_link camera_suffix frame_rate hfov noice x y z roll pitch yaw camera_frame_name sensor_base_frame_name parent_frame_name">
    <xacro:camera_macro
      namespace="${namespace}"
      parent_link="${parent_link}"
      camera_suffix="${camera_suffix}"
      camera_frame_name="${camera_frame_name}"
      sensor_base_frame_name="${sensor_base_frame_name}"
      frame_rate="${frame_rate}"
      horizontal_fov="${hfov}"
      image_width="752"
      image_height="480"
      min_distance="0.02"
      max_distance="80"
      noise_mean="0.0"
      noise_stddev="${noice}"
      parent_frame_name="${parent_frame_name}"
      x="${x}"
      y="${y}"
      z="${z}"
      yaw="${yaw}"
      pitch="${pitch}"
      roll="${roll}"
      >
      <visual>
        <origin xyz="0 0 0" rpy="1.57079632679 0 0" />
        <geometry>
          <mesh filename="package://rotors_description/meshes/bluefox.dae"
            scale="1 1 1" />
        </geometry>
      </visual>
    </xacro:camera_macro>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a gps satelite blocking sensor {-->
  <xacro:macro name="gps_satelites_blocking_macro"
    params="namespace parent_link">
    <link name="${namespace}/gps_sat_link">
      <visual name="gps_sat_base">
        <geometry>
          <cylinder radius="0.0255"
            length="0.0234" />
        </geometry>
      </visual>
    </link>
    <joint name="${namespace}/gps_sat_link_joint" type="fixed">
      <parent link="${parent_link}" />
      <child link="${namespace}/gps_sat_link" />
      <origin xyz="0 0 0" rpy="0 -1.57 0" />
    </joint>
    <gazebo reference="${namespace}/gps_sat_link">
      <sensor name='sweeper' type='ray'>
        <visualize>false</visualize>
        <update_rate>2</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>4</samples>
              <resolution>1</resolution>
              <min_angle>-1.1</min_angle>
              <max_angle>1.1</max_angle>
            </horizontal>
            <vertical>
              <samples>4</samples>
              <resolution>1</resolution>
              <min_angle>-0.9</min_angle>
              <max_angle>0.9</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0.5</min>
            <max>50</max>
            <resolution>0.5</resolution>
          </range>
        </ray>
        <plugin name='gazebo_ros_range' filename='libgazebo_ros_laser.so'>
          <topicName>gps_sat_blocking</topicName>
          <frameName>gps_blocking</frameName>
        </plugin>
      </sensor>
      <material>Gazebo/Black</material>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a Mobius camera {-->
  <xacro:macro name="mobius_camera_macro"
    params="namespace parent_link camera_suffix frame_rate  x y z roll pitch yaw camera_frame_name sensor_base_frame_name parent_frame_name">
    <xacro:camera_macro
      namespace="${namespace}"
      parent_link="${parent_link}"
      camera_suffix="${camera_suffix}"
      frame_rate="${frame_rate}"
      camera_frame_name="${camera_frame_name}"
      sensor_base_frame_name="${sensor_base_frame_name}"
      horizontal_fov="2.28638"
      image_width="1280"
      image_height="720"
      min_distance="0.02"
      max_distance="40"
      noise_mean="0.0"
      noise_stddev="0.007"
      parent_frame_name="${parent_frame_name}"
      x="${x}"
      y="${y}"
      z="${z}"
      yaw="${yaw}"
      pitch="${pitch}"
      roll="${roll}"
      >
      <visual>
        <origin xyz="-0.004 0.0045 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://rotors_description/meshes/mobius.dae"
            scale="1 1 1" />
        </geometry>
      </visual>
    </xacro:camera_macro>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a magnetic gripper {-->
  <xacro:macro name="magnet_gripper_macro"
    params="namespace name color parent *origin">
    <joint name="${name}_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent}" />
      <child link="${namespace}/${name}_link" />
    </joint>
    <link name="${namespace}/${name}_link">
      <visual>
        <origin xyz="-0.09 0 0.03" rpy="0 0 0" />
        <geometry>
          <box size=".005 .05 0.06" />
        </geometry>
      </visual>
      <visual>
        <origin xyz="0.09 0 0.03" rpy="0 0 0" />
        <geometry>
          <box size=".005 .05 0.06" />
        </geometry>
      </visual>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size=".18 .05 0.005" />
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size=".18 .05 0.005" />
        </geometry>
      </collision>
    </link>
    <gazebo reference="${name}_link">
      <material>Gazebo/${color}</material>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a Timepix detector {-->
  <xacro:macro name="timepix_macro" params="namespace name parent color *origin">
    <joint name="${name}_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent}" />
      <child link="${name}_link" />
    </joint>
    <link name="${name}_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.02 0.1 0.1" />
        </geometry>
      </visual>
    </link>
    <gazebo reference="${name}_link">
      <material>Gazebo/${color}</material>
    </gazebo>
    <gazebo>
      <plugin name="gazebo_timepix" filename="libgazebo_timepix.so" />
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a water gun {-->
  <xacro:macro name="water_gun_macro" params="namespace name parent muzzle_velocity particle_capacity spread color spawning_reservoir offset_x offset_y offset_z size_x size_y size_z *origin">
    <joint name="${name}_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent}" />
      <child link="${name}_link" />
    </joint>
    <link name="${name}_link">
      <visual>
        <origin xyz="${offset_x - size_x} ${offset_y} ${offset_z}" rpy="0 0 0" />
        <geometry>
          <box size="${size_x} ${size_y} ${size_z}" />
        </geometry>
      </visual>
    </link>
    <gazebo reference="${name}_link">
      <material>Gazebo/${color}</material>
    </gazebo>
    <gazebo>
      <plugin name="water_gun_plugin" filename="libwater_gun_plugin.so">
        <muzzle_velocity>${muzzle_velocity}</muzzle_velocity>
        <offset_x>${offset_x}</offset_x>
        <offset_y>${offset_y}</offset_y>
        <offset_z>${offset_z}</offset_z>
        <spread>${spread}</spread>
        <particle_capacity>${particle_capacity}</particle_capacity>
        <spawning_reservoir>${spawning_reservoir}</spawning_reservoir>
      </plugin>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a light {-->
  <xacro:macro name="light_macro" params="namespace name parent offset_x offset_y offset_z offset_yaw offset_roll offset_pitch update_rate max_pitch_rate initial_on ">
      <joint name="${name}_joint" type="revolute">
          <parent link="${parent}"/>
          <child link="${name}_link"/>
          <axis xyz="0 1 0"/>
          <dynamics damping="0.05" friction="0.05"/>
          <limit upper="1.57" lower="-1.57" effort="1" velocity="10" />
          <origin xyz="${offset_x} ${offset_y} ${offset_z}" rpy="0.0 0.0 0.0"/>
      </joint>
      <link name="${name}_link">
          <inertial>
              <mass value="1e-3" />
              <inertia ixx="1e-5" ixy="0.0" ixz="0.0" iyy="1e-5" iyz="0.0" izz="1e-5"/>
          </inertial>
        <visual>
          <geometry>
            <box size="0.01 0.01 0.01" />
          </geometry>
        </visual>
      </link>
      <gazebo>
        <plugin name="light_gazebo_plugin" filename="liblight_gazebo_plugin.so">
          <offset_x>${offset_x}</offset_x>
          <offset_y>${offset_y}</offset_y>
          <offset_z>${offset_z}</offset_z>
          <offset_pitch>${offset_pitch}</offset_pitch>
          <offset_yaw>${offset_yaw}</offset_yaw>
          <offset_roll>${offset_roll}</offset_roll>
          <spawning_frame>${parent}</spawning_frame>
          <update_rate>${update_rate}</update_rate>
          <max_pitch_rate>${max_pitch_rate}</max_pitch_rate>
          <initial_on>${initial_on}</initial_on>
        </plugin>
      </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a camera mounted on virtual servo {-->
  <xacro:macro name="servo_camera_macro" params="namespace name parent offset_x offset_y offset_z offset_yaw offset_roll offset_pitch update_rate max_pitch_rate camera_type">

      <joint name="${name}_joint" type="revolute">
          <parent link="${parent}"/>
          <child link="${name}_link"/>
          <axis xyz="0 1 0"/>
          <dynamics damping="0.05" friction="0.05"/>
          <limit upper="1.57" lower="-1.57" effort="1" velocity="10" />
          <origin xyz="${offset_x} ${offset_y} ${offset_z}" rpy="0.0 0.0 0.0"/>
      </joint>

      <link name="${name}_link">
          <inertial>
              <mass value="1e-3" />
              <inertia ixx="1e-5" ixy="0.0" ixz="0.0" iyy="1e-5" iyz="0.0" izz="1e-5"/>
          </inertial>
        <visual>
          <geometry>
            <box size="0.01 0.01 0.01" />
          </geometry>
        </visual>
      </link>
      <gazebo>
        <plugin name="servo_camera_plugin" filename="libservo_camera_plugin.so">
          <offset_x>${offset_x}</offset_x>
          <offset_y>${offset_y}</offset_y>
          <offset_z>${offset_z}</offset_z>
          <offset_pitch>${offset_pitch}</offset_pitch>
          <offset_yaw>${offset_yaw}</offset_yaw>
          <offset_roll>${offset_roll}</offset_roll>
          <spawning_frame>${parent}</spawning_frame>
          <update_rate>${update_rate}</update_rate>
          <max_pitch_rate>${max_pitch_rate}</max_pitch_rate>
          <joint_name>${name}_joint</joint_name>
          <camera_type>${camera_type}</camera_type>
        </plugin>
      </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a UV LED{-->
  <xacro:macro name="uvled_macro"
    params="namespace parent_link number frequency *origin">
    <link name="${namespace}_uvled_${number}_link">
      <visual>
        <origin xyz="0 0 -0.0025" rpy="0 0 0" />
        <geometry>
          <cylinder radius="0.007" length="0.005"/>
        </geometry>
      </visual>
    </link>
    <link name="${namespace}_uvled_${number}_electrodes_link">
      <visual>
        <origin xyz="0 0 -0.0025" rpy="0 0 0" />
        <geometry>
          <box size="0.001 0.02 0.001"/>
        </geometry>
      </visual>
    </link>
    <link name="${namespace}_uvled_${number}_lens_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <sphere  radius="0.005"/>
        </geometry>
      </visual>
      <inertial>
        <mass value="0.0001" /> <!-- [kg] -->
        <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001" />
      </inertial>
    </link>

    <joint name="${namespace}_uvled_${number}_lens_joint" type="fixed">
      <parent link="${parent_link}" />
      <xacro:insert_block name="origin" />
      <!-- <parent link="${namespace}_uvled_${number}_link" /> -->
      <child link="${namespace}_uvled_${number}_lens_link" />
    </joint>
    <joint name="${namespace}_uvled_${number}_joint" type="fixed">
      <parent link="${namespace}_uvled_${number}_lens_link" />
      <child link="${namespace}_uvled_${number}_link" />
    </joint>
    <joint name="${namespace}_uvled_${number}_electrodes_joint" type="fixed">
      <parent link="${namespace}_uvled_${number}_link" />
      <child link="${namespace}_uvled_${number}_electrodes_link" />
    </joint>

    <gazebo reference="${namespace}_uvled_${number}_lens_link">
      <sensor type="rfid" name="${namespace}_uvled_${number}_dummycam">
        <update_rate>1</update_rate>
        <plugin name='${namespace}_uvled_${number}_blinker' filename="libuvdar_led.so">
          <link_name>${namespace}_uvled_${number}_lens_link</link_name>
          <alwaysOn>false</alwaysOn>
          <updateRate>1</updateRate>
          <frequency>${frequency}</frequency>
          <number>${number}</number>
        </plugin>
      </sensor>
    </gazebo>

    <gazebo reference="${namespace}_uvled_${number}_lens_joint">
      <disableFixedJointLumping>true</disableFixedJointLumping> 
      <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>

    <gazebo reference="${namespace}_uvled_${number}_lens_link">
      <material>Gazebo/BlueTransparent</material>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- UV led - hexarotor configuration {-->
  <xacro:macro name="uvled_hexarotor"
    params="f1 f2 namespace parent_link">
    <!-- UV LED -->
    <xacro:uvled_macro
      namespace="${namespace}"
      parent_link="base_link"
      number="1"
      frequency="${f1}">
      <origin xyz="0.2382 0.1375 -0.07" rpy="0 1.57079632679 0.5236" />
    </xacro:uvled_macro>
    <xacro:uvled_macro
      namespace="${namespace}"
      parent_link="base_link"
      number="2"
      frequency="${f1}">
      <origin xyz="0 0.2750 -0.07" rpy="0 1.57079632679 1.5708" />
    </xacro:uvled_macro>
    <xacro:uvled_macro
      namespace="${namespace}"
      parent_link="base_link"
      number="3"
      frequency="${f1}">
      <origin xyz="-0.2382 0.1375 -0.07" rpy="0 1.57079632679 2.6180" />
    </xacro:uvled_macro>
    <xacro:uvled_macro
      namespace="${namespace}"
      parent_link="base_link"
      number="4"
      frequency="${f2}">
      <origin xyz="-0.2382 -0.1375 -0.07" rpy="0 1.57079632679 3.6652" />
    </xacro:uvled_macro>
    <xacro:uvled_macro
      namespace="${namespace}"
      parent_link="base_link"
      number="5"
      frequency="${f2}">
      <origin xyz="0 -0.2750 -0.07" rpy="0 1.57079632679 4.7124" />
    </xacro:uvled_macro>
    <xacro:uvled_macro
      namespace="${namespace}"
      parent_link="base_link"
      number="6"
      frequency="${f2}">
      <origin xyz="0.2382 -0.1375 -0.07" rpy="0 1.57079632679 5.7596" />
    </xacro:uvled_macro>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a thermal camera {-->
  <xacro:macro name="thermal_camera_macro" params="namespace parent_frame_name camera_frame_name sensor_base_frame_name camera_topic_name camera_suffix parent_link frame_rate hfov x y z roll pitch yaw image_width image_height color">
    <link name="${namespace}/${camera_frame_name}/thermal_camera_link">
      <visual>
        <origin xyz="0 0 0" rpy="1.57079632679 0 0" />
        <geometry>
          <mesh filename="package://rotors_description/meshes/bluefox.dae" scale="1 1 1" />
        </geometry>
      </visual>
    </link>

    <joint name="${namespace}/${camera_frame_name}/thermal_camera_joint" type="fixed">
      <origin xyz="${x} ${y} ${z}" rpy="${roll} ${pitch} ${yaw}"/>
      <parent link="${parent_link}" />
      <child link="${namespace}/${camera_frame_name}/thermal_camera_link" />
    </joint>

    <gazebo reference="${namespace}/${camera_frame_name}/thermal_camera_link">
      <sensor type="camera" name="mrs_thermal_camera_sensor">
        <update_rate>${frame_rate}</update_rate>
        <camera>
          <horizontal_fov>${hfov}</horizontal_fov>
          <image>
            <format>R8G8B8</format>
            <width>${2 * image_width}</width>
            <height>${2 * image_height}</height>
          </image>
          <clip>
            <near>0.1</near>
            <far>300</far>
          </clip>
        </camera>
        <plugin name="thermal_camera_controller" filename="libmrs_gazebo_ros_thermal_camera.so">
          <alwaysOn>true</alwaysOn>
          <cameraName>${camera_suffix}</cameraName>
          <updateRate>${frame_rate}</updateRate>
          <imageTopicName>${camera_topic_name}/rgb_image</imageTopicName>
          <cameraInfoTopicName>${camera_topic_name}/camera_info</cameraInfoTopicName>
          <rawTemperatureTopicName>${camera_topic_name}/raw_temp_array</rawTemperatureTopicName>
          <surroundingTemperature>20</surroundingTemperature>
          <maximalTemperature>150</maximalTemperature>
          <minimalTemperatureGreenColor>0.2</minimalTemperatureGreenColor>
          <noiseStdDev>4.0</noiseStdDev>
          <noiseStdDevMaxTemp>20.0</noiseStdDevMaxTemp>
          <frameName>${camera_frame_name}</frameName>
          <parentFrameName>${parent_frame_name}</parentFrameName>
          <sensorBaseFrameName>${sensor_base_frame_name}</sensorBaseFrameName>
          <x>${x}</x>
          <y>${y}</y>
          <z>${z}</z>
          <roll>${roll}</roll>
          <pitch>${pitch}</pitch>
          <yaw>${yaw}</yaw>
        </plugin>
      </sensor>
    </gazebo>    
    <gazebo reference="${namespace}/thermal_camera_link">
      <material>Gazebo/${color}</material>
    </gazebo>
  </xacro:macro>
  <!--}-->

  <!-- Macro to add a UV Camera {-->
  <xacro:macro name="uvcam_macro"
    params="calibration_file frame_rate number namespace parent_link *origin">
    <link name="${namespace}_uvcam_${number}_link">
      <gravity>0</gravity>
      <visual name='base'>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://rotors_description/meshes/bluefox.dae"
            scale="1 1 1" />
        </geometry>
      </visual>
    </link>
    <joint name="${namespace}_$uvcam_${number}_lens_joint" type="fixed">
      <parent link="${parent_link}" />
      <xacro:insert_block name="origin" />
      <child link="${namespace}_uvcam_${number}_link" />
    </joint>
    <gazebo reference="${namespace}_uvcam_${number}_link">
      <sensor type="camera" name="${namespace}_uvcam_${number}_dummycam">
        <update_rate>1</update_rate>
        <plugin name='${namespace}_uvcam_${number}' filename="libuvdar_cam.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>${frame_rate}</updateRate>
          <framerate>${frame_rate}</framerate>
          <calibration_file>${calibration_file}</calibration_file>
          <number>${number}</number>
        </plugin>
      </sensor>
    </gazebo>
    <gazebo reference="${namespace}_uvcam_${number}_link">
      <material>Gazebo/DarkGrey</material>
    </gazebo>
  </xacro:macro>
  <!--}-->

<!-- MBZIRC Wall challenge sensors {-->
<xacro:macro name="wall_challenge_macro">

  <!-- Garmin {-->
  <xacro:garmin_macro
    namespace="${namespace}"
    parent_link="base_link"
    orientation=""
    x="0.0445"
    y="-0.185"
    z="-0.045"
    roll="0"
    pitch="1.57079632679"
    yaw="0"
    >
  </xacro:garmin_macro>
  <!--}-->

  <!-- wide angle bluefox {-->
  <xacro:bluefox_camera_macro
    namespace="${namespace}"
    parent_link="base_link"
    camera_suffix="bluefox_brick"
    frame_rate="100.0"
    hfov="2.05"
    noice="0.007"
    parent_frame_name="$(arg namespace)/fcu"
    camera_frame_name="$(arg namespace)/bluefox_brick_optical"
    sensor_base_frame_name="$(arg namespace)/bluefox_brick"
    x="0.0"
    y="-0.189"
    z="-0.068"
    roll="0"
    pitch="1.57079632679"
    yaw="-1.57079632679"
    >
  </xacro:bluefox_camera_macro>
  <!--}-->

  <!-- optflow bluefox {-->
  <xacro:bluefox_camera_macro
    namespace="${namespace}"
    parent_link="base_link"
    camera_suffix="bluefox_optflow"
    frame_rate="100.0"
    hfov="1.9"
    noice="0.007"
    parent_frame_name="$(arg namespace)/fcu"
    camera_frame_name="$(arg namespace)/bluefox_optflow_optical"
    sensor_base_frame_name="$(arg namespace)/bluefox_optflow"
    x="-0.041"
    y="-0.185"
    z="-0.068"
    roll="0"
    pitch="1.57079632679"
    yaw="0"
    >
  </xacro:bluefox_camera_macro>
<!--}-->

  <!-- tilted realsense {-->
  <xacro:realsense_macro
    namespace="${namespace}"
    parent_link="base_link"
    camera_suffix="realsense_down"
    parent_frame_name="$(arg namespace)/fcu"
    x="0.0"
    y="0.185"
    z="-0.042"
    roll="-1.57079632679"
    pitch="1.308996939"
    yaw="3.14159265359"
    >
</xacro:realsense_macro>
<!--
    roll="-1.57079632679"
    pitch="1.83259571459"
    yaw="0.0"
-->
  <!--}-->

</xacro:macro>

<!--}-->

<!-- MBZIRC Fire challenge sensors {-->
<xacro:macro name="fire_challenge_macro">
  
  <!-- Garmin {-->
  <xacro:garmin_macro
    namespace="${namespace}"
    parent_link="base_link"
    orientation=""
    x="0.177"
    y="0.0735"
    z="-0.07"
    roll="0"
    pitch="1.57079632679"
    yaw="0"
    >
  </xacro:garmin_macro>
  <!--}-->
  
  <!-- Rplidar {-->
  <xacro:rplidar_macro
    namespace="${namespace}"
    parent_link="base_link"
    frame_name="$(arg namespace)/rplidar"
    visualize="$(arg visualize_sensors)"
    parent_frame_name="$(arg namespace)/fcu"
    x="0.0"
    y="0.0"
    z="0.205"
    roll="0"
    pitch="0"
    yaw="0"
    >
  </xacro:rplidar_macro>
  <!--}-->

  <!-- Realsense front {-->
  <xacro:realsense_macro
    namespace="${namespace}"
    parent_link="base_link"
    camera_suffix="realsense_front"
    parent_frame_name="$(arg namespace)/fcu"
    x="0.184"
    y="0"
    z="-0.04"
    roll="0"
    pitch="0"
    yaw="0">
  </xacro:realsense_macro>
  <!--}-->
  
<!-- Water gun {-->
<xacro:water_gun_macro
  namespace="${namespace}"
  name="water_gun_macro"
  parent="base_link"
  color="Red"
  muzzle_velocity="10.0"
  particle_capacity="30"
  spread="1.0"
  spawning_reservoir="the_void"
  offset_x="0.2"
  offset_y="0.0"
  offset_z="-0.1"
  size_x="0.2"
  size_y="0.05"
  size_z="0.05">
  <origin xyz="0 0 0" rpy="0 0 0" />
</xacro:water_gun_macro>
<!--}-->

  <!-- Thermal camera {-->
  <xacro:thermal_camera_macro
    namespace="${namespace}"
    camera_frame_name="thermal/top_optical"
    camera_topic_name="/${namespace}/thermal/top"
    parent_link="base_link"
    camera_suffix="thermal/top"
    frame_rate="14.0"
    hfov="0.575959"
    image_width="32"
    image_height="32"
    x="0.13"
    y="0"
    z="-0.085"
    roll="0"
    pitch="-0.523598776"
    yaw="0"
    parent_frame_name="$(arg namespace)/fcu"
    sensor_base_frame_name="$(arg namespace)/thermal/top"
    color="Yellow">
  </xacro:thermal_camera_macro>
  <xacro:thermal_camera_macro
    namespace="${namespace}"
    camera_frame_name="thermal/middle_optical"
    camera_topic_name="/${namespace}/thermal/middle"
    parent_link="base_link"
    camera_suffix="thermal/middle"
    frame_rate="14.0"
    hfov="0.575959"
    image_width="32"
    image_height="32"
    x="0.13"
    y="0"
    z="-0.085"
    roll="0"
    pitch="0"
    yaw="0"
    parent_frame_name="$(arg namespace)/fcu"
    sensor_base_frame_name="$(arg namespace)/thermal/middle"
    color="Yellow">
  </xacro:thermal_camera_macro>
  <xacro:thermal_camera_macro
    namespace="${namespace}"
    camera_frame_name="thermal/bottom_optical"
    camera_topic_name="/${namespace}/thermal/bottom"
    parent_link="base_link"
    camera_suffix="thermal/bottom"
    frame_rate="14.0"
    hfov="0.575959"
    image_width="32"
    image_height="32"
    x="0.13"
    y="0"
    z="-0.085"
    roll="0"
    pitch="0.523598776"
    yaw="0"
    parent_frame_name="$(arg namespace)/fcu"
    sensor_base_frame_name="$(arg namespace)/thermal/bottom"
    color="Yellow">
  </xacro:thermal_camera_macro>
  <!--}-->

</xacro:macro>
<!--}-->

</robot>
