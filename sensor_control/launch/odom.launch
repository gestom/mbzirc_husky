<launch>
    <env name="ROSCONSOLE_FORMAT" value="${severity} ${walltime} ${node}: ${message}"/>
    <env name="ROSCONSOLE_STDOUT_LINE_BUFFERED" value="1"/>

    <node name="cloud_throttle_slow" pkg="topic_tools" type="throttle"
          args="messages velodyne_points 2.0 dynamic_point_cloud_slow"/>

    <!--<node name="cloud_throttle_elev" pkg="topic_tools" type="throttle"
          args="messages velodyne_points 4.0 dynamic_point_cloud_elev"/>-->

    <group ns="tf">
        <!-- The server node does not use private namespace for params. -->
        <param name="buffer_size" value="120.0"/>
        <param name="publish_frame_service" value="true"/>
        <param name="use_node_namespace" value="true"/>
        <node name="server" pkg="tf2_ros" type="buffer_server"/>
    </group>

    <node name="box_filter" pkg="cloud_proc" type="cloud_proc" output="screen">
        <param name="tf_server" value="tf/server"/>
        <rosparam param="filters">
            - cloud_proc.DiscardOld:
                max_age: 10.0
            - cloud_proc.Box:
                keep: 1
                lower: [-10.0, -10.0, -2.5]
                upper: [ 10.0,  10.0,  1.5]
                fields: ["x", "y", "z"]
                <!--frame: "rslidar"-->
                <!--timeout: 1.0-->
            - cloud_proc.Transform:
                target_frame: map
                fields: [x, y, z]
                timeout: 10.0
        </rosparam>

        <remap from="in" to="dynamic_point_cloud_elev"/>
        <remap from="out" to="dynamic_point_cloud_box"/>
	<remap from="/odometry/filtered" to="/odom"/>
    </node>

    <!-- Odometry for elevation mapping - waits for correct transform from SLAM.
    LIDAR
    -->
    <node name="tf_odom_cloud" pkg="cloud_proc" type="tf_odom" output="log">
        <param name="tf_server" value="tf/server"/>
        <param name="parent_frame" value="map"/>
        <param name="child_frame" value="velodyne"/>
        <param name="timeout" value="0.5"/>
        <param name="no_wait" value="false"/>

        <remap from="trigger" to="dynamic_point_cloud_box"/>
        <remap from="odom" to="cloud_odom"/>
    </node>
        <!-- Odometry for elevation mapping - waits for correct transform from SLAM.
    REALSENSE
    -->
    <node name="tf_odom_real" pkg="cloud_proc" type="tf_odom" output="log">
        <param name="tf_server" value="tf/server"/>
        <param name="parent_frame" value="map"/>
        <param name="child_frame" value="camerad_depth_optical_frame"/>
        <param name="timeout" value="0.5"/>
        <param name="no_wait" value="false"/>

        <remap from="trigger" to="camerad/depth/color/points"/>
        <remap from="odom" to="realsense_odom"/>
    </node>
    
</launch>
