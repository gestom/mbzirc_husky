#!/usr/bin/env python
PACKAGE = "wallpattern_detection"
from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()

gen.add("outputImageIndex",     int_t,    0, "Image index", 0,  0, 5)
gen.add("manualThreshold",     int_t,    0, "Manual threshold", 100,  0, 255)
gen.add("minBlobSize",     int_t,    0, "min blob size", 80,  0,  5000)
gen.add("maxBlobSize",     int_t,    0, "max blob size", 1000000,  0,  1000000)
gen.add("minCircularity",     double_t,    0, "Minimal Circularity", 0.2,  0, 1.0)
gen.add("minRoundness",     double_t,    0, "Minimal Roundness", 0.02,  0, 1.0)
gen.add("objectDiameter",     double_t,    0, "Object diameter [m]", 0.2,  0, 0.5)
gen.add("histogramScale",     int_t,    0, "Histogram image scaling", 2,  1, 5)
gen.add("visualDistanceToleranceRatio",     double_t,    0, "Visual tolerance (ratio)", 0.3,  0, 2.0)
gen.add("visualDistanceToleranceAbsolute",     double_t,    0, "Visual tolerance (absolute)", 0.5,  0, 2.0)
gen.add("longObject",     bool_t,    0, "Detect long objects", False)
#gen.add("masterDiameter",   double_t,    0, "Master card white circle outer diameter [cm]", 7.0,  0.0, 50.0)
#gen.add("distanceTolerance",   double_t,    0, "Maximal discrepancy between RGB and depth distance estimate [%].", 20.0, 0.0, 100.0)

#gen.add("initialCircularityTolerance",   double_t,    0, "Initial circularity test tolerance [%].", 30.0, 0.0, 100.0)
#gen.add("finalCircularityTolerance",     double_t,    0, "Final circularity test tolerance [%].", 2.0,  0.0, 100.0)

#gen.add("areaRatioTolerance",   double_t,    0, "Tolerance of black and white area ratios  [%].", 40.0,  0.0, 200.0)
#gen.add("centerDistanceToleranceRatio",   double_t,    0, "Concentricity test ratio  [%].", 10.0,  0.0, 100.0)
#gen.add("centerDistanceToleranceAbs",     double_t,    0, "Concentricity test absolute [px].", 5.0,  0.0, 25.0)

exit(gen.generate(PACKAGE, "wallpattern_detection", "wallpattern_detection"))
